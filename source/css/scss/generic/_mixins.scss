/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

/// Mixin helper to output vendor-prefixed CSS
/// @author HugoGiraudel
/// @param {String} $property - Unprefixed CSS property
/// @param {*} $value - Raw CSS value
/// @param {List} $prefixes [()] - List of prefixes to output
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }

  #{$property}: $value;
}

/* CSS Transition
	Usage: @include transition(width 0.3s ease-out);
 */
@mixin transition($transition-value) {
	@include prefix(transition, $transition-value, 'webkit' 'moz' 'ms' 'o');
}

/* Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback  
	Usage: @include font-size(1, large);
*/
@mixin font-size( $decimal-size, $keyword: null ) {
  @if $keyword{ font-size: $keyword; }
  @else { font-size: $decimal-size * $base-font-multiplier * 16px;}
  font-size: $decimal-size * 1rem;
}


/* Border radius
	Usage: @include border-radius(10px);
*/
@mixin border-radius( $value ) {
	@include prefix(border-radius, $value, 'webkit' 'moz' 'ms' 'o');
}


/* Flexing
	Usage: TODO
*/
@mixin display-flex {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
}
@mixin flex-direction-v {
	-webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
}
@mixin flex-direction-h {
	-webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
}
@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}
@mixin align-content($value: stretch) {
	-webkit-align-content: $value;
	-moz-align-content: $value;
	@if $value == flex-start {
		-ms-flex-line-pack: start;
	} @else if $value == flex-end {
		-ms-flex-line-pack: end;
	} @else {
		-ms-flex-line-pack: $value;
	}
	align-content: $value;
}
@mixin justify-content($value: center) {
	-webkit-box-pack: $value;
    -webkit-justify-content: $value;
    -ms-flex-pack: $value;
    justify-content: $value;
}
@mixin flex-wrap($val) {
	-webkit-box-flex-wrap: $val;
    	-webkit-flex-wrap: $val;
    		-ms-flex-wrap: $val;
    			flex-wrap: $val;
}

@mixin flex($val) {
	-webkit-box-flex: $val;
    	-webkit-flex: $val;
    		-ms-flex: $val;
    			flex: $val;
}
@mixin align-self($value: auto) {
	-webkit-align-self: $value;
	-moz-align-self: $value;
	@if $value == flex-start {
		-ms-flex-item-align: start;
	} @else if $value == flex-end {
		-ms-flex-item-align: end;
	} @else {
		-ms-flex-item-align: $value;
	}
	align-self: $value;
}